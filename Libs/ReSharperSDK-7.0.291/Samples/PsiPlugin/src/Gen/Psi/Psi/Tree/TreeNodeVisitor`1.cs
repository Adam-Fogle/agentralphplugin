//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.PsiPlugin.Tree {
  public abstract partial class TreeNodeVisitor<TContext> {
    public virtual void VisitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.Tree.ITreeNode node, TContext context)
    {
    }
    public virtual void VisitAfterQuote ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IAfterQuote afterQuoteParam, TContext context) {
      VisitNode (afterQuoteParam, context);
    }
    public virtual void VisitChoiceTail ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IChoiceTail choiceTailParam, TContext context) {
      VisitNode (choiceTailParam, context);
    }
    public virtual void VisitExtraDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IExtraDefinition extraDefinitionParam, TContext context) {
      VisitNode (extraDefinitionParam, context);
    }
    public virtual void VisitExtrasDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition extrasDefinitionParam, TContext context) {
      VisitNode (extrasDefinitionParam, context);
    }
    public virtual void VisitInterfacesDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IInterfacesDefinition interfacesDefinitionParam, TContext context) {
      VisitNode (interfacesDefinitionParam, context);
    }
    public virtual void VisitListExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IListExpression listExpressionParam, TContext context) {
      VisitNode (listExpressionParam, context);
    }
    public virtual void VisitModifier ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IModifier modifierParam, TContext context) {
      VisitNode (modifierParam, context);
    }
    public virtual void VisitNotChoiceExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.INotChoiceExpression notChoiceExpressionParam, TContext context) {
      VisitNode (notChoiceExpressionParam, context);
    }
    public virtual void VisitOptionDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionDefinition optionDefinitionParam, TContext context) {
      VisitNode (optionDefinitionParam, context);
    }
    public virtual void VisitOptionName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionName optionNameParam, TContext context) {
      VisitNode (optionNameParam, context);
    }
    public virtual void VisitOptionStringValue ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionStringValue optionStringValueParam, TContext context) {
      VisitNode (optionStringValueParam, context);
    }
    public virtual void VisitOptionsDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionsDefinition optionsDefinitionParam, TContext context) {
      VisitNode (optionsDefinitionParam, context);
    }
    public virtual void VisitParenExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IParenExpression parenExpressionParam, TContext context) {
      VisitNode (parenExpressionParam, context);
    }
    public virtual void VisitPathDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathDeclaration pathDeclarationParam, TContext context) {
      VisitNode (pathDeclarationParam, context);
    }
    public virtual void VisitPathElement ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathElement pathElementParam, TContext context) {
      VisitNode (pathElementParam, context);
    }
    public virtual void VisitPathName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathName pathNameParam, TContext context) {
      VisitNode (pathNameParam, context);
    }
    public virtual void VisitPathValue ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathValue pathValueParam, TContext context) {
      VisitNode (pathValueParam, context);
    }
    public virtual void VisitPathsDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathsDeclaration pathsDeclarationParam, TContext context) {
      VisitNode (pathsDeclarationParam, context);
    }
    public virtual void VisitPredicated ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPredicated predicatedParam, TContext context) {
      VisitNode (predicatedParam, context);
    }
    public virtual void VisitPsiExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPsiExpression psiExpressionParam, TContext context) {
      VisitNode (psiExpressionParam, context);
    }
    public virtual void VisitPsiFile ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPsiFile psiFileParam, TContext context) {
      VisitNode (psiFileParam, context);
    }
    public virtual void VisitQuantifier ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IQuantifier quantifierParam, TContext context) {
      VisitNode (quantifierParam, context);
    }
    public virtual void VisitRoleGetterParameter ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRoleGetterParameter roleGetterParameterParam, TContext context) {
      VisitNode (roleGetterParameterParam, context);
    }
    public virtual void VisitRoleName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRoleName roleNameParam, TContext context) {
      VisitNode (roleNameParam, context);
    }
    public virtual void VisitRuleAngleParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleAngleParameters ruleAngleParametersParam, TContext context) {
      VisitNode (ruleAngleParametersParam, context);
    }
    public virtual void VisitRuleBody ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody ruleBodyParam, TContext context) {
      VisitNode (ruleBodyParam, context);
    }
    public virtual void VisitRuleBraceParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBraceParameters ruleBraceParametersParam, TContext context) {
      VisitNode (ruleBraceParametersParam, context);
    }
    public virtual void VisitRuleBracketParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketParameters ruleBracketParametersParam, TContext context) {
      VisitNode (ruleBracketParametersParam, context);
    }
    public virtual void VisitRuleBracketTypedParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters ruleBracketTypedParametersParam, TContext context) {
      VisitNode (ruleBracketTypedParametersParam, context);
    }
    public virtual void VisitRuleDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaration ruleDeclarationParam, TContext context) {
      VisitNode (ruleDeclarationParam, context);
    }
    public virtual void VisitRuleDeclaredName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName ruleDeclaredNameParam, TContext context) {
      VisitNode (ruleDeclaredNameParam, context);
    }
    public virtual void VisitRuleName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleName ruleNameParam, TContext context) {
      VisitNode (ruleNameParam, context);
    }
    public virtual void VisitRuleParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleParameters ruleParametersParam, TContext context) {
      VisitNode (ruleParametersParam, context);
    }
    public virtual void VisitSequence ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISequence sequenceParam, TContext context) {
      VisitNode (sequenceParam, context);
    }
    public virtual void VisitSharpExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISharpExpression sharpExpressionParam, TContext context) {
      VisitNode (sharpExpressionParam, context);
    }
    public virtual void VisitSimpleExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISimpleExpression simpleExpressionParam, TContext context) {
      VisitNode (simpleExpressionParam, context);
    }
    public virtual void VisitVariableDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IVariableDeclaration variableDeclarationParam, TContext context) {
      VisitNode (variableDeclarationParam, context);
    }
    public virtual void VisitVariableName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IVariableName variableNameParam, TContext context) {
      VisitNode (variableNameParam, context);
    }
  }
}
