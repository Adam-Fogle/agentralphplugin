//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.PsiPlugin.Tree {
  public abstract partial class TreeNodeVisitor<TContext, TReturn> {
    public virtual TReturn VisitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.Tree.ITreeNode node, TContext context) {
      return default(TReturn);
    }
    public virtual TReturn VisitAfterQuote ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IAfterQuote afterQuoteParam, TContext context) {
      return VisitNode (afterQuoteParam, context);
    }
    public virtual TReturn VisitChoiceTail ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IChoiceTail choiceTailParam, TContext context) {
      return VisitNode (choiceTailParam, context);
    }
    public virtual TReturn VisitExtraDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IExtraDefinition extraDefinitionParam, TContext context) {
      return VisitNode (extraDefinitionParam, context);
    }
    public virtual TReturn VisitExtrasDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition extrasDefinitionParam, TContext context) {
      return VisitNode (extrasDefinitionParam, context);
    }
    public virtual TReturn VisitInterfacesDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IInterfacesDefinition interfacesDefinitionParam, TContext context) {
      return VisitNode (interfacesDefinitionParam, context);
    }
    public virtual TReturn VisitListExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IListExpression listExpressionParam, TContext context) {
      return VisitNode (listExpressionParam, context);
    }
    public virtual TReturn VisitModifier ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IModifier modifierParam, TContext context) {
      return VisitNode (modifierParam, context);
    }
    public virtual TReturn VisitNotChoiceExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.INotChoiceExpression notChoiceExpressionParam, TContext context) {
      return VisitNode (notChoiceExpressionParam, context);
    }
    public virtual TReturn VisitOptionDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionDefinition optionDefinitionParam, TContext context) {
      return VisitNode (optionDefinitionParam, context);
    }
    public virtual TReturn VisitOptionName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionName optionNameParam, TContext context) {
      return VisitNode (optionNameParam, context);
    }
    public virtual TReturn VisitOptionStringValue ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionStringValue optionStringValueParam, TContext context) {
      return VisitNode (optionStringValueParam, context);
    }
    public virtual TReturn VisitOptionsDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionsDefinition optionsDefinitionParam, TContext context) {
      return VisitNode (optionsDefinitionParam, context);
    }
    public virtual TReturn VisitParenExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IParenExpression parenExpressionParam, TContext context) {
      return VisitNode (parenExpressionParam, context);
    }
    public virtual TReturn VisitPathDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathDeclaration pathDeclarationParam, TContext context) {
      return VisitNode (pathDeclarationParam, context);
    }
    public virtual TReturn VisitPathElement ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathElement pathElementParam, TContext context) {
      return VisitNode (pathElementParam, context);
    }
    public virtual TReturn VisitPathName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathName pathNameParam, TContext context) {
      return VisitNode (pathNameParam, context);
    }
    public virtual TReturn VisitPathValue ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathValue pathValueParam, TContext context) {
      return VisitNode (pathValueParam, context);
    }
    public virtual TReturn VisitPathsDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathsDeclaration pathsDeclarationParam, TContext context) {
      return VisitNode (pathsDeclarationParam, context);
    }
    public virtual TReturn VisitPredicated ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPredicated predicatedParam, TContext context) {
      return VisitNode (predicatedParam, context);
    }
    public virtual TReturn VisitPsiExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPsiExpression psiExpressionParam, TContext context) {
      return VisitNode (psiExpressionParam, context);
    }
    public virtual TReturn VisitPsiFile ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPsiFile psiFileParam, TContext context) {
      return VisitNode (psiFileParam, context);
    }
    public virtual TReturn VisitQuantifier ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IQuantifier quantifierParam, TContext context) {
      return VisitNode (quantifierParam, context);
    }
    public virtual TReturn VisitRoleGetterParameter ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRoleGetterParameter roleGetterParameterParam, TContext context) {
      return VisitNode (roleGetterParameterParam, context);
    }
    public virtual TReturn VisitRoleName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRoleName roleNameParam, TContext context) {
      return VisitNode (roleNameParam, context);
    }
    public virtual TReturn VisitRuleAngleParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleAngleParameters ruleAngleParametersParam, TContext context) {
      return VisitNode (ruleAngleParametersParam, context);
    }
    public virtual TReturn VisitRuleBody ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody ruleBodyParam, TContext context) {
      return VisitNode (ruleBodyParam, context);
    }
    public virtual TReturn VisitRuleBraceParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBraceParameters ruleBraceParametersParam, TContext context) {
      return VisitNode (ruleBraceParametersParam, context);
    }
    public virtual TReturn VisitRuleBracketParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketParameters ruleBracketParametersParam, TContext context) {
      return VisitNode (ruleBracketParametersParam, context);
    }
    public virtual TReturn VisitRuleBracketTypedParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters ruleBracketTypedParametersParam, TContext context) {
      return VisitNode (ruleBracketTypedParametersParam, context);
    }
    public virtual TReturn VisitRuleDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaration ruleDeclarationParam, TContext context) {
      return VisitNode (ruleDeclarationParam, context);
    }
    public virtual TReturn VisitRuleDeclaredName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName ruleDeclaredNameParam, TContext context) {
      return VisitNode (ruleDeclaredNameParam, context);
    }
    public virtual TReturn VisitRuleName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleName ruleNameParam, TContext context) {
      return VisitNode (ruleNameParam, context);
    }
    public virtual TReturn VisitRuleParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleParameters ruleParametersParam, TContext context) {
      return VisitNode (ruleParametersParam, context);
    }
    public virtual TReturn VisitSequence ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISequence sequenceParam, TContext context) {
      return VisitNode (sequenceParam, context);
    }
    public virtual TReturn VisitSharpExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISharpExpression sharpExpressionParam, TContext context) {
      return VisitNode (sharpExpressionParam, context);
    }
    public virtual TReturn VisitSimpleExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISimpleExpression simpleExpressionParam, TContext context) {
      return VisitNode (simpleExpressionParam, context);
    }
    public virtual TReturn VisitVariableDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IVariableDeclaration variableDeclarationParam, TContext context) {
      return VisitNode (variableDeclarationParam, context);
    }
    public virtual TReturn VisitVariableName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IVariableName variableNameParam, TContext context) {
      return VisitNode (variableNameParam, context);
    }
  }
}
