//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using System;
using JetBrains.ReSharper.Psi.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
using JetBrains.ReSharper.PsiPlugin.Parsing;
namespace JetBrains.ReSharper.PsiPlugin.Tree.Impl {
  internal partial class RuleDeclaration : PsiCompositeElement, JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaration {
    public const short PSI_RULE_NAME= ChildRole.LAST + 1;
    public const short PSI_PARAMETERS= ChildRole.LAST + 2;
    public const short PSI_EXTRAS= ChildRole.LAST + 3;
    public const short PSI_BODY= ChildRole.LAST + 4;
    internal RuleDeclaration() : base() {
    }
    public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType NodeType {
      get { return JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_DECLARATION; }
    }
    public override void Accept(JetBrains.ReSharper.PsiPlugin.Tree.TreeNodeVisitor visitor) {
      visitor.VisitRuleDeclaration(this);
    }
    public override void Accept<TContext>(JetBrains.ReSharper.PsiPlugin.Tree.TreeNodeVisitor<TContext> visitor, TContext context) {
      visitor.VisitRuleDeclaration(this, context);
    }
    public override TReturn Accept<TContext, TReturn>(JetBrains.ReSharper.PsiPlugin.Tree.TreeNodeVisitor<TContext, TReturn> visitor, TContext context) {
      return visitor.VisitRuleDeclaration(this, context);
    }
    private static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeDictionary<short> CHILD_ROLES = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeDictionary<short>(
      new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>[]
      {
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BODY, PSI_BODY),
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_DECLARED_NAME, PSI_RULE_NAME),
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.EXTRAS_DEFINITION, PSI_EXTRAS),
        new System.Collections.Generic.KeyValuePair<JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType, short>(JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BRACKET_TYPED_PARAMETERS, PSI_PARAMETERS),
      }
    );
    public override short GetChildRole (JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement child) {
      return CHILD_ROLES[child.NodeType];
    }
    public virtual  JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody Body {
      get
      {
        CompositeElement current = this;  
    
        JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody result = null;
        TreeElement current0 = current.FindChildByRole (JetBrains.ReSharper.PsiPlugin.Tree.Impl.RuleDeclaration.PSI_BODY);
        if (current0 != null) {
          result = (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody) current0;
        }
        return result;
      }
    }
    public virtual  JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition Extras {
      get
      {
        CompositeElement current = this;  
    
        JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition result = null;
        TreeElement current0 = current.FindChildByRole (JetBrains.ReSharper.PsiPlugin.Tree.Impl.RuleDeclaration.PSI_EXTRAS);
        if (current0 != null) {
          result = (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition) current0;
        }
        return result;
      }
    }
    public virtual  JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters Parameters {
      get
      {
        CompositeElement current = this;  
    
        JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters result = null;
        TreeElement current0 = current.FindChildByRole (JetBrains.ReSharper.PsiPlugin.Tree.Impl.RuleDeclaration.PSI_PARAMETERS);
        if (current0 != null) {
          result = (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters) current0;
        }
        return result;
      }
    }
    public virtual  JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName RuleName {
      get
      {
        CompositeElement current = this;  
    
        JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName result = null;
        TreeElement current0 = current.FindChildByRole (JetBrains.ReSharper.PsiPlugin.Tree.Impl.RuleDeclaration.PSI_RULE_NAME);
        if (current0 != null) {
          result = (JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName) current0;
        }
        return result;
      }
    }
    public virtual JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody SetBody (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        while(next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
            }
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_DECLARED_NAME) {
            current = next;
          } else {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          }
        }
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.ROLE_GETTER_PARAMETER)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.ROLE_GETTER_PARAMETER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BRACKET_TYPED_PARAMETERS)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BRACKET_TYPED_PARAMETERS) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.OPTIONS_DEFINITION)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.OPTIONS_DEFINITION) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.EXTRAS_DEFINITION)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.EXTRAS_DEFINITION) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next == null) {
          return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.COLON) {
            current = next;
          } else {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BODY) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody)result;
      }
    }
    public virtual JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition SetExtras (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        while(next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
            }
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_DECLARED_NAME) {
            current = next;
          } else {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
          }
        }
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.ROLE_GETTER_PARAMETER)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.ROLE_GETTER_PARAMETER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BRACKET_TYPED_PARAMETERS)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BRACKET_TYPED_PARAMETERS) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.OPTIONS_DEFINITION)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.OPTIONS_DEFINITION) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.EXTRAS_DEFINITION) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition)result;
      }
    }
    public virtual JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters SetParameters (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        while(next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
            }
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_DECLARED_NAME) {
            current = next;
          } else {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
          }
        }
        next = GetNextFilteredChild (current);
        if (next != null && (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.ROLE_GETTER_PARAMETER)) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.ROLE_GETTER_PARAMETER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
            }
          }
        }  
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_BRACKET_TYPED_PARAMETERS) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters)result;
      }
    }
    public virtual JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName SetRuleName (JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName param)
    {
      using (JetBrains.Application.WriteLockCookie.Create (this.IsPhysical()))
      {
        TreeElement current = null, next = GetNextFilteredChild (current), result = null;
        while(next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
          next = GetNextFilteredChild (current);
          if (next == null) {
            return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName)result;
          } else {
            if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.MODIFIER) {
              current = next;
            } else {
              return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName)result;
            }
          }
        }
        next = GetNextFilteredChild (current);
        if (next == null) {
          if (param == null) return null;
          result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildAfter (this, current, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
        } else {
          if (next.NodeType == JetBrains.ReSharper.PsiPlugin.Tree.Impl.ElementType.RULE_DECLARED_NAME) {
            if (param != null) {
              result = current = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.ReplaceChild(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            } else {
              current = GetNextFilteredChild (next);
              JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.DeleteChild (next);
            }
          } else {
            if (param == null) return null;
            result = (TreeElement)JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ModificationUtil.AddChildBefore(next, (JetBrains.ReSharper.Psi.Tree.ITreeNode)param);
            current = next;
          }
        }
        return (JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName)result;
      }
    }
    public override string ToString() {
      return "IRuleDeclaration";
    }
  }
}
