//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.PsiPlugin.Tree {
  public abstract partial class TreeNodeVisitor {
    public virtual void VisitNode ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.Tree.ITreeNode node)
    {
    }
    public virtual void VisitAfterQuote ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IAfterQuote afterQuoteParam) {
      VisitNode (afterQuoteParam);
    }
    public virtual void VisitChoiceTail ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IChoiceTail choiceTailParam) {
      VisitNode (choiceTailParam);
    }
    public virtual void VisitExtraDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IExtraDefinition extraDefinitionParam) {
      VisitNode (extraDefinitionParam);
    }
    public virtual void VisitExtrasDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IExtrasDefinition extrasDefinitionParam) {
      VisitNode (extrasDefinitionParam);
    }
    public virtual void VisitInterfacesDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IInterfacesDefinition interfacesDefinitionParam) {
      VisitNode (interfacesDefinitionParam);
    }
    public virtual void VisitListExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IListExpression listExpressionParam) {
      VisitNode (listExpressionParam);
    }
    public virtual void VisitModifier ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IModifier modifierParam) {
      VisitNode (modifierParam);
    }
    public virtual void VisitNotChoiceExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.INotChoiceExpression notChoiceExpressionParam) {
      VisitNode (notChoiceExpressionParam);
    }
    public virtual void VisitOptionDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionDefinition optionDefinitionParam) {
      VisitNode (optionDefinitionParam);
    }
    public virtual void VisitOptionName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionName optionNameParam) {
      VisitNode (optionNameParam);
    }
    public virtual void VisitOptionStringValue ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionStringValue optionStringValueParam) {
      VisitNode (optionStringValueParam);
    }
    public virtual void VisitOptionsDefinition ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IOptionsDefinition optionsDefinitionParam) {
      VisitNode (optionsDefinitionParam);
    }
    public virtual void VisitParenExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IParenExpression parenExpressionParam) {
      VisitNode (parenExpressionParam);
    }
    public virtual void VisitPathDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathDeclaration pathDeclarationParam) {
      VisitNode (pathDeclarationParam);
    }
    public virtual void VisitPathElement ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathElement pathElementParam) {
      VisitNode (pathElementParam);
    }
    public virtual void VisitPathName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathName pathNameParam) {
      VisitNode (pathNameParam);
    }
    public virtual void VisitPathValue ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathValue pathValueParam) {
      VisitNode (pathValueParam);
    }
    public virtual void VisitPathsDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPathsDeclaration pathsDeclarationParam) {
      VisitNode (pathsDeclarationParam);
    }
    public virtual void VisitPredicated ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPredicated predicatedParam) {
      VisitNode (predicatedParam);
    }
    public virtual void VisitPsiExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPsiExpression psiExpressionParam) {
      VisitNode (psiExpressionParam);
    }
    public virtual void VisitPsiFile ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IPsiFile psiFileParam) {
      VisitNode (psiFileParam);
    }
    public virtual void VisitQuantifier ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IQuantifier quantifierParam) {
      VisitNode (quantifierParam);
    }
    public virtual void VisitRoleGetterParameter ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRoleGetterParameter roleGetterParameterParam) {
      VisitNode (roleGetterParameterParam);
    }
    public virtual void VisitRoleName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRoleName roleNameParam) {
      VisitNode (roleNameParam);
    }
    public virtual void VisitRuleAngleParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleAngleParameters ruleAngleParametersParam) {
      VisitNode (ruleAngleParametersParam);
    }
    public virtual void VisitRuleBody ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBody ruleBodyParam) {
      VisitNode (ruleBodyParam);
    }
    public virtual void VisitRuleBraceParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBraceParameters ruleBraceParametersParam) {
      VisitNode (ruleBraceParametersParam);
    }
    public virtual void VisitRuleBracketParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketParameters ruleBracketParametersParam) {
      VisitNode (ruleBracketParametersParam);
    }
    public virtual void VisitRuleBracketTypedParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleBracketTypedParameters ruleBracketTypedParametersParam) {
      VisitNode (ruleBracketTypedParametersParam);
    }
    public virtual void VisitRuleDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaration ruleDeclarationParam) {
      VisitNode (ruleDeclarationParam);
    }
    public virtual void VisitRuleDeclaredName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleDeclaredName ruleDeclaredNameParam) {
      VisitNode (ruleDeclaredNameParam);
    }
    public virtual void VisitRuleName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleName ruleNameParam) {
      VisitNode (ruleNameParam);
    }
    public virtual void VisitRuleParameters ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IRuleParameters ruleParametersParam) {
      VisitNode (ruleParametersParam);
    }
    public virtual void VisitSequence ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISequence sequenceParam) {
      VisitNode (sequenceParam);
    }
    public virtual void VisitSharpExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISharpExpression sharpExpressionParam) {
      VisitNode (sharpExpressionParam);
    }
    public virtual void VisitSimpleExpression ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.ISimpleExpression simpleExpressionParam) {
      VisitNode (simpleExpressionParam);
    }
    public virtual void VisitVariableDeclaration ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IVariableDeclaration variableDeclarationParam) {
      VisitNode (variableDeclarationParam);
    }
    public virtual void VisitVariableName ([JetBrains.Annotations.NotNull] JetBrains.ReSharper.PsiPlugin.Tree.IVariableName variableNameParam) {
      VisitNode (variableNameParam);
    }
  }
}
