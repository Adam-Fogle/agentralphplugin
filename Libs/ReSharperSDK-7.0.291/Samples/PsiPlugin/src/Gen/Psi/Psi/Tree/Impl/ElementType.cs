//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.PsiPlugin.Tree.Impl {
  public abstract class ElementType {
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType ERROR_ELEMENT = JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ErrorElement.NODE_TYPE;
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType AFTER_QUOTE = AFTER_QUOTE_INTERNAL.INSTANCE;
    private class AFTER_QUOTE_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly AFTER_QUOTE_INTERNAL INSTANCE = new AFTER_QUOTE_INTERNAL ();
      AFTER_QUOTE_INTERNAL() : base("AFTER_QUOTE") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new AfterQuote();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType CHOICE_TAIL = CHOICE_TAIL_INTERNAL.INSTANCE;
    private class CHOICE_TAIL_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly CHOICE_TAIL_INTERNAL INSTANCE = new CHOICE_TAIL_INTERNAL ();
      CHOICE_TAIL_INTERNAL() : base("CHOICE_TAIL") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new ChoiceTail();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType EXTRA_DEFINITION = EXTRA_DEFINITION_INTERNAL.INSTANCE;
    private class EXTRA_DEFINITION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly EXTRA_DEFINITION_INTERNAL INSTANCE = new EXTRA_DEFINITION_INTERNAL ();
      EXTRA_DEFINITION_INTERNAL() : base("EXTRA_DEFINITION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new ExtraDefinition();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType EXTRAS_DEFINITION = EXTRAS_DEFINITION_INTERNAL.INSTANCE;
    private class EXTRAS_DEFINITION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly EXTRAS_DEFINITION_INTERNAL INSTANCE = new EXTRAS_DEFINITION_INTERNAL ();
      EXTRAS_DEFINITION_INTERNAL() : base("EXTRAS_DEFINITION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new ExtrasDefinition();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType INTERFACES_DEFINITION = INTERFACES_DEFINITION_INTERNAL.INSTANCE;
    private class INTERFACES_DEFINITION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly INTERFACES_DEFINITION_INTERNAL INSTANCE = new INTERFACES_DEFINITION_INTERNAL ();
      INTERFACES_DEFINITION_INTERNAL() : base("INTERFACES_DEFINITION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new InterfacesDefinition();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType LIST_EXPRESSION = LIST_EXPRESSION_INTERNAL.INSTANCE;
    private class LIST_EXPRESSION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly LIST_EXPRESSION_INTERNAL INSTANCE = new LIST_EXPRESSION_INTERNAL ();
      LIST_EXPRESSION_INTERNAL() : base("LIST_EXPRESSION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new ListExpression();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType MODIFIER = MODIFIER_INTERNAL.INSTANCE;
    private class MODIFIER_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly MODIFIER_INTERNAL INSTANCE = new MODIFIER_INTERNAL ();
      MODIFIER_INTERNAL() : base("MODIFIER") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new Modifier();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType NOT_CHOICE_EXPRESSION = NOT_CHOICE_EXPRESSION_INTERNAL.INSTANCE;
    private class NOT_CHOICE_EXPRESSION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly NOT_CHOICE_EXPRESSION_INTERNAL INSTANCE = new NOT_CHOICE_EXPRESSION_INTERNAL ();
      NOT_CHOICE_EXPRESSION_INTERNAL() : base("NOT_CHOICE_EXPRESSION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new NotChoiceExpression();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType OPTION_DEFINITION = OPTION_DEFINITION_INTERNAL.INSTANCE;
    private class OPTION_DEFINITION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly OPTION_DEFINITION_INTERNAL INSTANCE = new OPTION_DEFINITION_INTERNAL ();
      OPTION_DEFINITION_INTERNAL() : base("OPTION_DEFINITION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new OptionDefinition();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType OPTION_NAME = OPTION_NAME_INTERNAL.INSTANCE;
    private class OPTION_NAME_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly OPTION_NAME_INTERNAL INSTANCE = new OPTION_NAME_INTERNAL ();
      OPTION_NAME_INTERNAL() : base("OPTION_NAME") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new OptionName();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType OPTION_STRING_VALUE = OPTION_STRING_VALUE_INTERNAL.INSTANCE;
    private class OPTION_STRING_VALUE_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly OPTION_STRING_VALUE_INTERNAL INSTANCE = new OPTION_STRING_VALUE_INTERNAL ();
      OPTION_STRING_VALUE_INTERNAL() : base("OPTION_STRING_VALUE") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new OptionStringValue();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType OPTIONS_DEFINITION = OPTIONS_DEFINITION_INTERNAL.INSTANCE;
    private class OPTIONS_DEFINITION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly OPTIONS_DEFINITION_INTERNAL INSTANCE = new OPTIONS_DEFINITION_INTERNAL ();
      OPTIONS_DEFINITION_INTERNAL() : base("OPTIONS_DEFINITION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new OptionsDefinition();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PAREN_EXPRESSION = PAREN_EXPRESSION_INTERNAL.INSTANCE;
    private class PAREN_EXPRESSION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PAREN_EXPRESSION_INTERNAL INSTANCE = new PAREN_EXPRESSION_INTERNAL ();
      PAREN_EXPRESSION_INTERNAL() : base("PAREN_EXPRESSION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new ParenExpression();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PATH_DECLARATION = PATH_DECLARATION_INTERNAL.INSTANCE;
    private class PATH_DECLARATION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PATH_DECLARATION_INTERNAL INSTANCE = new PATH_DECLARATION_INTERNAL ();
      PATH_DECLARATION_INTERNAL() : base("PATH_DECLARATION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PathDeclaration();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PATH_ELEMENT = PATH_ELEMENT_INTERNAL.INSTANCE;
    private class PATH_ELEMENT_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PATH_ELEMENT_INTERNAL INSTANCE = new PATH_ELEMENT_INTERNAL ();
      PATH_ELEMENT_INTERNAL() : base("PATH_ELEMENT") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PathElement();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PATH_NAME = PATH_NAME_INTERNAL.INSTANCE;
    private class PATH_NAME_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PATH_NAME_INTERNAL INSTANCE = new PATH_NAME_INTERNAL ();
      PATH_NAME_INTERNAL() : base("PATH_NAME") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PathName();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PATH_VALUE = PATH_VALUE_INTERNAL.INSTANCE;
    private class PATH_VALUE_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PATH_VALUE_INTERNAL INSTANCE = new PATH_VALUE_INTERNAL ();
      PATH_VALUE_INTERNAL() : base("PATH_VALUE") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PathValue();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PATHS_DECLARATION = PATHS_DECLARATION_INTERNAL.INSTANCE;
    private class PATHS_DECLARATION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PATHS_DECLARATION_INTERNAL INSTANCE = new PATHS_DECLARATION_INTERNAL ();
      PATHS_DECLARATION_INTERNAL() : base("PATHS_DECLARATION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PathsDeclaration();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PREDICATED = PREDICATED_INTERNAL.INSTANCE;
    private class PREDICATED_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PREDICATED_INTERNAL INSTANCE = new PREDICATED_INTERNAL ();
      PREDICATED_INTERNAL() : base("PREDICATED") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new Predicated();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PSI_EXPRESSION = PSI_EXPRESSION_INTERNAL.INSTANCE;
    private class PSI_EXPRESSION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PSI_EXPRESSION_INTERNAL INSTANCE = new PSI_EXPRESSION_INTERNAL ();
      PSI_EXPRESSION_INTERNAL() : base("PSI_EXPRESSION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PsiExpression();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType PSI_FILE = PSI_FILE_INTERNAL.INSTANCE;
    private class PSI_FILE_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly PSI_FILE_INTERNAL INSTANCE = new PSI_FILE_INTERNAL ();
      PSI_FILE_INTERNAL() : base("PSI_FILE") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new PsiFile();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType QUANTIFIER = QUANTIFIER_INTERNAL.INSTANCE;
    private class QUANTIFIER_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly QUANTIFIER_INTERNAL INSTANCE = new QUANTIFIER_INTERNAL ();
      QUANTIFIER_INTERNAL() : base("QUANTIFIER") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new Quantifier();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType ROLE_GETTER_PARAMETER = ROLE_GETTER_PARAMETER_INTERNAL.INSTANCE;
    private class ROLE_GETTER_PARAMETER_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly ROLE_GETTER_PARAMETER_INTERNAL INSTANCE = new ROLE_GETTER_PARAMETER_INTERNAL ();
      ROLE_GETTER_PARAMETER_INTERNAL() : base("ROLE_GETTER_PARAMETER") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RoleGetterParameter();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType ROLE_NAME = ROLE_NAME_INTERNAL.INSTANCE;
    private class ROLE_NAME_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly ROLE_NAME_INTERNAL INSTANCE = new ROLE_NAME_INTERNAL ();
      ROLE_NAME_INTERNAL() : base("ROLE_NAME") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RoleName();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_ANGLE_PARAMETERS = RULE_ANGLE_PARAMETERS_INTERNAL.INSTANCE;
    private class RULE_ANGLE_PARAMETERS_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_ANGLE_PARAMETERS_INTERNAL INSTANCE = new RULE_ANGLE_PARAMETERS_INTERNAL ();
      RULE_ANGLE_PARAMETERS_INTERNAL() : base("RULE_ANGLE_PARAMETERS") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleAngleParameters();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_BODY = RULE_BODY_INTERNAL.INSTANCE;
    private class RULE_BODY_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_BODY_INTERNAL INSTANCE = new RULE_BODY_INTERNAL ();
      RULE_BODY_INTERNAL() : base("RULE_BODY") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleBody();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_BRACE_PARAMETERS = RULE_BRACE_PARAMETERS_INTERNAL.INSTANCE;
    private class RULE_BRACE_PARAMETERS_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_BRACE_PARAMETERS_INTERNAL INSTANCE = new RULE_BRACE_PARAMETERS_INTERNAL ();
      RULE_BRACE_PARAMETERS_INTERNAL() : base("RULE_BRACE_PARAMETERS") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleBraceParameters();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_BRACKET_PARAMETERS = RULE_BRACKET_PARAMETERS_INTERNAL.INSTANCE;
    private class RULE_BRACKET_PARAMETERS_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_BRACKET_PARAMETERS_INTERNAL INSTANCE = new RULE_BRACKET_PARAMETERS_INTERNAL ();
      RULE_BRACKET_PARAMETERS_INTERNAL() : base("RULE_BRACKET_PARAMETERS") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleBracketParameters();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_BRACKET_TYPED_PARAMETERS = RULE_BRACKET_TYPED_PARAMETERS_INTERNAL.INSTANCE;
    private class RULE_BRACKET_TYPED_PARAMETERS_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_BRACKET_TYPED_PARAMETERS_INTERNAL INSTANCE = new RULE_BRACKET_TYPED_PARAMETERS_INTERNAL ();
      RULE_BRACKET_TYPED_PARAMETERS_INTERNAL() : base("RULE_BRACKET_TYPED_PARAMETERS") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleBracketTypedParameters();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_DECLARATION = RULE_DECLARATION_INTERNAL.INSTANCE;
    private class RULE_DECLARATION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_DECLARATION_INTERNAL INSTANCE = new RULE_DECLARATION_INTERNAL ();
      RULE_DECLARATION_INTERNAL() : base("RULE_DECLARATION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleDeclaration();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_DECLARED_NAME = RULE_DECLARED_NAME_INTERNAL.INSTANCE;
    private class RULE_DECLARED_NAME_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_DECLARED_NAME_INTERNAL INSTANCE = new RULE_DECLARED_NAME_INTERNAL ();
      RULE_DECLARED_NAME_INTERNAL() : base("RULE_DECLARED_NAME") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleDeclaredName();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_NAME = RULE_NAME_INTERNAL.INSTANCE;
    private class RULE_NAME_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_NAME_INTERNAL INSTANCE = new RULE_NAME_INTERNAL ();
      RULE_NAME_INTERNAL() : base("RULE_NAME") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleName();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType RULE_PARAMETERS = RULE_PARAMETERS_INTERNAL.INSTANCE;
    private class RULE_PARAMETERS_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly RULE_PARAMETERS_INTERNAL INSTANCE = new RULE_PARAMETERS_INTERNAL ();
      RULE_PARAMETERS_INTERNAL() : base("RULE_PARAMETERS") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new RuleParameters();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType SEQUENCE = SEQUENCE_INTERNAL.INSTANCE;
    private class SEQUENCE_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly SEQUENCE_INTERNAL INSTANCE = new SEQUENCE_INTERNAL ();
      SEQUENCE_INTERNAL() : base("SEQUENCE") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new Sequence();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType SHARP_EXPRESSION = SHARP_EXPRESSION_INTERNAL.INSTANCE;
    private class SHARP_EXPRESSION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly SHARP_EXPRESSION_INTERNAL INSTANCE = new SHARP_EXPRESSION_INTERNAL ();
      SHARP_EXPRESSION_INTERNAL() : base("SHARP_EXPRESSION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new SharpExpression();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType SIMPLE_EXPRESSION = SIMPLE_EXPRESSION_INTERNAL.INSTANCE;
    private class SIMPLE_EXPRESSION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly SIMPLE_EXPRESSION_INTERNAL INSTANCE = new SIMPLE_EXPRESSION_INTERNAL ();
      SIMPLE_EXPRESSION_INTERNAL() : base("SIMPLE_EXPRESSION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new SimpleExpression();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType VARIABLE_DECLARATION = VARIABLE_DECLARATION_INTERNAL.INSTANCE;
    private class VARIABLE_DECLARATION_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly VARIABLE_DECLARATION_INTERNAL INSTANCE = new VARIABLE_DECLARATION_INTERNAL ();
      VARIABLE_DECLARATION_INTERNAL() : base("VARIABLE_DECLARATION") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new VariableDeclaration();
      }
    }
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType VARIABLE_NAME = VARIABLE_NAME_INTERNAL.INSTANCE;
    private class VARIABLE_NAME_INTERNAL : JetBrains.ReSharper.PsiPlugin.Tree.PsiCompositeNodeType
    {
      public static readonly VARIABLE_NAME_INTERNAL INSTANCE = new VARIABLE_NAME_INTERNAL ();
      VARIABLE_NAME_INTERNAL() : base("VARIABLE_NAME") {}
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
         return new VariableName();
      }
    }
  }
}
