//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using System.Collections;
namespace JetBrains.ReSharper.PsiPlugin.Parsing {
  public static class TokenBitsets {
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_0 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_1 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ASTERISK,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OR,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PLUS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.QUEST,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.RPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.SEMICOLON,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_2 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.COLON,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXTRAS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACES,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PATHS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_3 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OR,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_4 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.COLON,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXTRAS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACKET,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OPTIONS,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_5 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_6 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACES,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.RBRACE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_7 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ASTERISK,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OR,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PLUS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.QUEST,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.RPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.SEMICOLON,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.SEP_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_8 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleAngleParameters = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LT,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_simpleExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_choiceTail = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OR,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_optionStringValue = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.STRING_LITERAL,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_pathValue = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LT,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleBracketTypedParameters = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACKET,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_optionDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.STRING_LITERAL,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_pathsDeclaration = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PATHS,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_sharpExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.SHARP,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_notChoiceExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_interfacesDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACES,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_optionName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.STRING_LITERAL,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_predicated = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_parenExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_optionsDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OPTIONS,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_pathDeclaration = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_roleName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_variableName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_pathName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleBraceParameters = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_roleGetterParameter = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleBody = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OR,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleParameters = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACKET,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LT,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_optionEqDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EQ,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleBracketParameters = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LBRACKET,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_modifier = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleDeclaredName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_optionColonDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.COLON,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_variableDeclaration = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_psiFile = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACES,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OPTIONS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PATHS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_pathElement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_psiExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.OR,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_listExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_afterQuote = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_quantifier = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ASTERISK,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PLUS,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.QUEST,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ruleDeclaration = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ABSTRACT,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.ERRORHANDLING,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.INTERFACE,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.PRIVATE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_extraDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.GET,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_sequence = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.AND,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXCL,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.IDENTIFIER,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LIST_KEYWORD,
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.LPARENTH,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_extrasDefinition = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        JetBrains.ReSharper.PsiPlugin.Tree.Impl.TokenType.EXTRAS,
      }
    );
  }
}
